// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Campany {
  id                  Int       @id @default(autoincrement())
  company_logo        String?   @db.VarChar(255)
  company_name        String
  owner_name          String
  owner_lastname      String
  vat_number          String
  address             String
  zip_code            String
  city                String
  country             String
  owner_email         String
  owner_phone         String
  owner_website       String
  bank_name           String
  bank_account_number String
  created_at          DateTime? @default(now())
  updated_at          DateTime? @updatedAt
  cars                Car[]
  clients             Client[]
  invoices            Invoice[]
}

model Car {
  id            Int       @id @default(autoincrement())
  carImage      String    @db.VarChar(255)
  chassisNumber String
  brand         String
  model         String
  Year          String
  Price         Int
  carType       String
  transmission  String
  fuel          String
  matriculation String
  color         String
  disponibility Boolean
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt
  compagny      Campany   @relation(fields: [compagny_id], references: [id])
  compagny_id   Int
  Invoice       Invoice[]
}

model Client {
  id          Int       @id @default(autoincrement())
  surname     String?
  firstname   String?
  email       String?
  address     String
  genre       Gender
  identity    String
  phonenumber String?
  cin         String
  expiration  DateTime?
  country     String
  city        String
  region      String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @updatedAt
  compagny    Campany   @relation(fields: [compagny_id], references: [id])
  compagny_id Int
  Invoice     Invoice[]
}

model Invoice {
  id            Int       @id @default(autoincrement())
  client        Client    @relation(fields: [client_id], references: [id])
  client_id     Int
  car           Car       @relation(fields: [car_id], references: [id])
  car_id        Int
  date          DateTime
  dueDate       DateTime?
  amount        Float
  paymentMethod String
  paidStatus    Boolean
  comment          String?
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt
  compagny      Campany  @relation(fields: [compagny_id], references: [id])
  compagny_id   Int
}

enum Gender {
  Male
  Female
}
